{"version":3,"sources":["../../../../assets/Script/assets/Script/PlayerControl.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../assets/Script","sourcesContent":["import Game from \"./Game\";\nimport InvincibleEffect from \"./InvincibleEffect\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class PlayerControl extends cc.Component {\n\n    // Keys for acceleration movement\n    private accLeft: boolean = false;\n    private accRight: boolean = false;\n    private accUp: boolean = false;\n    private accDown: boolean = false;\n    private isLeftAnimPlaying: boolean = false;\n    private isRightAnimPlaying: boolean = false;\n\n    // X / Y bounds for the player\n    private leftBound: number = 0;\n    private rightBound: number = 0;\n    private upperBound: number = 0;\n    private lowerBound: number = 0;\n\n    private xSpeed: number = 0;\n    private ySpeed: number = 0;\n\n    private flySound: cc.AudioSource = null;\n    private cvs: cc.Node  = null;\n    private animations : cc.Animation = null;\n    private isCurrentlyInvincible: boolean = false;\n    private invincibleId = -1;\n    private boundId = -1;\n    private justPlayedBoundSound: boolean = false;\n    private isMobile : boolean = false;\n\n    private xAccelerometer: number = 0;\n    private yAccelerometer: number = 0;\n\n    @property(cc.AudioClip)\n    invincibleSound: cc.AudioClip = null;\n\n    @property(cc.AudioClip)\n    upperBoundSound: cc.AudioClip = null;\n\n    game : Game = null;\n\n    // Constants\n    private readonly X_ACCELERATION: number = 3200;\n    private readonly Y_ACCELERATION: number = 2000;\n    private readonly MOBILE_ACC_MULTIPLIER = 2.7;\n    private readonly DAMP: number = 0.8;\n\n    onLoad () {\n        this.cvs = cc.find(\"Canvas\");\n        this.flySound = this.getComponent(cc.AudioSource);\n        this.flySound.volume = 0.6;\n        this.animations = this.getComponent(cc.Animation);\n\n        this.isMobile = cc.sys.isMobile;\n        // =========== DIFFERENT CONTROLS DEPENDING ON THE SYSTEM ===========\n        if (this.isMobile) {\n            cc.systemEvent.on(cc.SystemEvent.EventType.DEVICEMOTION, this.onDeviceMotionEvent, this);\n            cc.systemEvent.setAccelerometerEnabled(true);\n        }\n        else {\n            cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n            cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n        }\n    }\n\n    start () {\n        this.leftBound = -this.cvs.width / 2 + this.node.width / 2;\n        this.rightBound = this.cvs.width / 2 - this.node.width / 2;\n        this.upperBound = this.game.getPlayerUpperBound();\n        this.lowerBound = this.node.height / 2 -this.cvs.height / 2;\n    }\n\n    update (dt) {\n        if (this.game.isPlayerAlive()) {\n            if (this.isMobile) {\n                this.updateForceMobile(dt);\n            }\n            else {\n                this.updateForce(dt);\n            }\n            this.applyForce(dt)\n            this.checkPlayerBounds();\n        }\n    }\n\n    checkPlayerBounds(){\n        // X-Screen bounds\n        if (this.node.x <= this.leftBound) {\n            this.node.x = this.leftBound;\n        }\n        else if (this.node.x >= this.rightBound) {\n            this.node.x = this.rightBound;\n        }\n\n        // Y-Screen bounds\n        if (this.node.y <= this.lowerBound) {\n            this.node.y = this.lowerBound;\n        }\n        else if (this.node.y > this.upperBound) {\n            this.playBoundSound();\n            this.node.y = this.upperBound -1;\n            this.ySpeed = 0;\n        }\n    }\n\n    updateForceMobile(dt: number) {\n        if (this.xAccelerometer < -0.25) {\n            if (!this.isLeftAnimPlaying) {\n                this.flySound.play();\n                this.isLeftAnimPlaying = true;\n                this.animations.play(\"PlayerLeft\");\n            }\n        }\n        else if (this.xAccelerometer > 0.25) {\n            if (!this.isRightAnimPlaying) {\n                this.flySound.play();\n                this.isRightAnimPlaying = true;\n                this.animations.play(\"PlayerRight\");\n                }\n        }\n        else {\n            this.animations.play(\"PlayerNormal\");\n            this.isRightAnimPlaying = false;\n            this.isLeftAnimPlaying = false;\n\n        }\n        // === X-AXIS ===\n        this.xSpeed += this.xAccelerometer * this.X_ACCELERATION * dt;\n        // === Y-AXIS ===\n        this.ySpeed += this.yAccelerometer * this.Y_ACCELERATION * dt;\n    }\n\n    updateForce(dt: number) {\n        if (this.accLeft) {\n            this.xSpeed -= this.X_ACCELERATION * dt;\n        } else if (this.accRight) {\n            this.xSpeed += this.X_ACCELERATION * dt;\n        }\n        if (this.accDown) {\n            this.ySpeed -= this.Y_ACCELERATION * dt;\n        } else if (this.accUp) {\n            this.ySpeed += this.Y_ACCELERATION * dt;\n        }\n    }\n\n    applyForce(dt) {\n        this.node.x += this.xSpeed * dt;\n        this.xSpeed *= this.DAMP;\n        this.node.y += this.ySpeed * dt;\n        this.ySpeed *= this.DAMP;\n    }\n\n    onKeyDown(event: cc.Event.EventKeyboard) {\n        \n        if (this.game.isPlayerAlive()) {\n            switch(event.keyCode) {\n                case cc.macro.KEY.left:\n                    if (!this.isLeftAnimPlaying) {\n                        this.flySound.play();\n                        this.isLeftAnimPlaying = true;\n                        this.animations.play(\"PlayerLeft\");\n                    }\n                    this.accLeft = true;\n                    break;\n                case cc.macro.KEY.right:\n                if (!this.isRightAnimPlaying) {\n                    this.flySound.play();\n                    this.isRightAnimPlaying = true;\n                    this.animations.play(\"PlayerRight\");\n                    }\n                    this.accRight = true;\n                    break;\n                case cc.macro.KEY.up:\n                    this.accUp = true;\n                    break;\n                case cc.macro.KEY.down:\n                    this.justPlayedBoundSound = false;\n                    this.accDown = true;\n                    break;\n                case cc.macro.KEY.space:\n                    break;\n            }\n        }\n \n    }\n\n    onKeyUp(event: cc.Event.EventKeyboard) {\n        if (this.game.isPlayerAlive()) {\n            switch(event.keyCode) {\n                case cc.macro.KEY.left:\n                    this.isLeftAnimPlaying = false;\n                    this.animations.play(\"PlayerNormal\");\n                    this.accLeft = false;\n                    break;\n                case cc.macro.KEY.right:\n                    this.isRightAnimPlaying = false;\n                    this.animations.play(\"PlayerNormal\");\n                    this.accRight = false;\n                    break;\n                case cc.macro.KEY.up:\n                    this.accUp = false;\n                    break;\n                case cc.macro.KEY.down:\n                    this.accDown = false;\n                    break;\n                case cc.macro.KEY.space:\n                    this.game.spawnBlueLaser();\n                    break;\n            }\n        }\n    }\n\n    onDeviceMotionEvent(event: any) {\n        this.xAccelerometer = event.acc.x;\n        this.yAccelerometer = event.acc.y;\n\n        // Cap it to 1 /  this.MOBILE_ACC_MULTIPLIER angle of the device\n        if (Math.abs(this.xAccelerometer) > 1 / this.MOBILE_ACC_MULTIPLIER) {\n            this.xAccelerometer = Math.sign(this.xAccelerometer) * (1 / this.MOBILE_ACC_MULTIPLIER);\n\n        }\n        if (Math.abs(this.yAccelerometer) > 1 / this.MOBILE_ACC_MULTIPLIER) {\n            this.yAccelerometer = Math.sign(this.yAccelerometer) * (1 / this.MOBILE_ACC_MULTIPLIER);\n        }\n\n        this.xAccelerometer *= this.MOBILE_ACC_MULTIPLIER;\n        this.yAccelerometer *= this.MOBILE_ACC_MULTIPLIER;\n}\n\n    playBoundSound() {\n        if (!this.justPlayedBoundSound) {\n            this.justPlayedBoundSound = true;\n            this.boundId = cc.audioEngine.play(this.upperBoundSound, false, 1);\n            this.game.hitBound();\n            if (this.isMobile) {\n                cc.audioEngine.setFinishCallback(this.boundId,\n                    () => this.yAccelerometer > 0 ? this.justPlayedBoundSound = true : this.justPlayedBoundSound = false);\n            }\n            else {\n                cc.audioEngine.setFinishCallback(this.boundId,\n                    () => this.accUp ? this.justPlayedBoundSound = true : this.justPlayedBoundSound = false);\n            }\n        }\n    }\n\n    makeInvincible() {\n        this.invincibleId = cc.audioEngine.play(this.invincibleSound, true, 0.4);\n        this.isCurrentlyInvincible = true;\n    }\n\n    makeNotInvincible() {\n        cc.audioEngine.stop(this.invincibleId);\n        this.isCurrentlyInvincible = false;\n    }\n\n    isInvincible() {\n        return this.isCurrentlyInvincible;\n    }\n\n    // ============== Animation trigger functions ==============\n    // These gets called after the main animation is finished (left/right animation)\n    // To keep the fire from the engine fired up while in a tilted state. \n    playMaxLeftFrames() {\n        this.animations.play(\"PlayerLeftMax\");\n    }\n\n    playMaxRightFrames() {\n        this.animations.play(\"PlayerRightMax\");\n    }\n\n    destroySelf() {\n        this.node.destroy();\n    }\n}\n"]}