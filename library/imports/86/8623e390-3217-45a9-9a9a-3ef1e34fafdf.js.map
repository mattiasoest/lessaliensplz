{"version":3,"sources":["../../../../assets/Script/assets/Script/PlayerControl.ts"],"names":[],"mappings":";;;;;AAGM,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAQ,CAAkB;AAG1C;IAA2C,iCAAY;IADvD;QAAA,qEA2LC;QAxLG,iCAAiC;QACzB,aAAO,GAAY,KAAK,CAAC;QACzB,cAAQ,GAAY,KAAK,CAAC;QAC1B,WAAK,GAAY,KAAK,CAAC;QACvB,aAAO,GAAY,KAAK,CAAC;QACzB,uBAAiB,GAAY,KAAK,CAAC;QACnC,wBAAkB,GAAY,KAAK,CAAC;QAE5C,8BAA8B;QACtB,eAAS,GAAW,CAAC,CAAC;QACtB,gBAAU,GAAW,CAAC,CAAC;QACvB,gBAAU,GAAW,CAAC,CAAC;QACvB,gBAAU,GAAW,CAAC,CAAC;QAEvB,YAAM,GAAW,CAAC,CAAC;QACnB,YAAM,GAAW,CAAC,CAAC;QAEnB,cAAQ,GAAmB,IAAI,CAAC;QAChC,SAAG,GAAa,IAAI,CAAC;QACrB,gBAAU,GAAkB,IAAI,CAAC;QACjC,2BAAqB,GAAY,KAAK,CAAC;QACvC,qBAAe,GAAW,CAAC,CAAC;QAC5B,aAAO,GAAG,CAAC,CAAC;QAGpB,qBAAe,GAAiB,IAAI,CAAC;QAErC,UAAI,GAAU,IAAI,CAAC;QAGnB,YAAY;QACK,oBAAc,GAAW,IAAI,CAAC;QAC9B,oBAAc,GAAW,IAAI,CAAC;QAC9B,UAAI,GAAW,GAAG,CAAC;;IAuJxC,CAAC;IArJG,8BAAM,GAAN;QACI,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC7B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC;QAClD,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,GAAG,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;QAClD,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAE,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;QAC5D,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,EAAE,CAAC,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QAC3E,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,EAAE,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IAC3E,CAAC;IAED,6BAAK,GAAL;IACA,CAAC;IAED,8BAAM,GAAN,UAAQ,EAAE;QACN,IAAI,IAAI,CAAC,qBAAqB,EAAE;YAC5B,IAAI,CAAC,eAAe,IAAI,EAAE,CAAC;YAC3B,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,EAAE;gBAC3D,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAClC,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;gBACnC,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;aAC5B;SACJ;QAED,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE;YAC3B,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,CAAA;SAC1B;IACL,CAAC;IAED,sCAAc,GAAd,UAAe,EAAE;QACb,iBAAiB;QACjB,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;SAC3C;aAAM,IAAI,IAAI,CAAC,QAAQ,EAAE;YACtB,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;SAC3C;QACD,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QAChC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC;QAEzB,kBAAkB;QAClB,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,EAAE;YAC/B,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;SAChC;aACI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,UAAU,EAAE;YACrC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;SACjC;QAED,iBAAiB;QACjB,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;SAC3C;aAAM,IAAI,IAAI,CAAC,KAAK,EAAE;YACnB,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;SAC3C;QAED,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QAChC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC;QAEzB,kBAAkB;QAClB,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,UAAU,EAAE;YAChC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;SACjC;aACI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,UAAU,EAAE;YACrC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;SACjC;IACL,CAAC;IAED,iCAAS,GAAT,UAAU,KAA6B;QACnC,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE;YAC3B,QAAO,KAAK,CAAC,OAAO,EAAE;gBAClB,KAAK,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI;oBAClB,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;wBACzB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;wBACrB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;wBAC9B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;qBACtC;oBACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;oBACpB,MAAM;gBACV,KAAK,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK;oBACvB,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;wBAC1B,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;wBACrB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;wBAC/B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;qBACnC;oBACD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;oBACrB,MAAM;gBACV,KAAK,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;oBAChB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;oBAClB,MAAM;gBACV,KAAK,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI;oBAClB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;oBACpB,MAAM;gBACV,KAAK,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK;oBACnB,MAAM;aACb;SACJ;IAEL,CAAC;IAED,+BAAO,GAAP,UAAQ,KAA6B;QACjC,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE;YAC3B,QAAO,KAAK,CAAC,OAAO,EAAE;gBAClB,KAAK,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI;oBAClB,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;oBAC/B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;oBACrC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACrB,MAAM;gBACV,KAAK,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK;oBACnB,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;oBAChC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;oBACrC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;oBACtB,MAAM;gBACV,KAAK,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;oBAChB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;oBACnB,MAAM;gBACV,KAAK,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI;oBAClB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACrB,MAAM;gBACV,KAAK,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK;oBACnB,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC;oBAC3B,MAAM;aACb;SACJ;IACL,CAAC;IAED,sCAAc,GAAd;QACI,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;QACpE,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC;IACtC,CAAC;IAED,oCAAY,GAAZ;QACI,OAAO,IAAI,CAAC,qBAAqB,CAAC;IACtC,CAAC;IAED,4DAA4D;IAC5D,gFAAgF;IAChF,sEAAsE;IACtE,yCAAiB,GAAjB;QACI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IAC1C,CAAC;IAED,0CAAkB,GAAlB;QACI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IAC3C,CAAC;IAED,mCAAW,GAAX;QACI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;IACxB,CAAC;IA9JD;QADC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC;0DACc;IA3BpB,aAAa;QADjC,OAAO;OACa,aAAa,CA0LjC;IAAD,oBAAC;CA1LD,AA0LC,CA1L0C,EAAE,CAAC,SAAS,GA0LtD;kBA1LoB,aAAa","file":"","sourceRoot":"../../../../assets/Script","sourcesContent":["import Game from \"./Game\";\nimport InvincibleEffect from \"./InvincibleEffect\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class PlayerControl extends cc.Component {\n\n    // Keys for acceleration movement\n    private accLeft: boolean = false;\n    private accRight: boolean = false;\n    private accUp: boolean = false;\n    private accDown: boolean = false;\n    private isLeftAnimPlaying: boolean = false;\n    private isRightAnimPlaying: boolean = false;\n\n    // X / Y bounds for the player\n    private leftBound: number = 0;\n    private rightBound: number = 0;\n    private upperBound: number = 0;\n    private lowerBound: number = 0;\n\n    private xSpeed: number = 0;\n    private ySpeed: number = 0;\n\n    private flySound: cc.AudioSource = null;\n    private cvs: cc.Node  = null;\n    private animations : cc.Animation = null;\n    private isCurrentlyInvincible: boolean = false;\n    private invincibleTimer: number = 0;\n    private audioId = 0;\n\n    @property(cc.AudioClip)\n    invincibleSound: cc.AudioClip = null;\n\n    game : Game = null;\n\n\n    // Constants\n    private readonly X_ACCELERATION: number = 3200;\n    private readonly Y_ACCELERATION: number = 2000;\n    private readonly DAMP: number = 0.8;\n\n    onLoad () {\n        this.cvs = cc.find(\"Canvas\");\n        this.flySound = this.getComponent(cc.AudioSource);\n        this.flySound.volume = 0.6;\n        this.animations = this.getComponent(cc.Animation);\n        this.leftBound = -this.cvs.width / 2;\n        this.rightBound = this.cvs.width / 2;\n        this.upperBound = 0;\n        this.lowerBound = this.node.height / 2 -this.cvs.height / 2;\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    }\n\n    start () {\n    }\n\n    update (dt) {\n        if (this.isCurrentlyInvincible) {\n            this.invincibleTimer += dt;\n            if (this.invincibleTimer >= this.game.getInvincibleDuration()) {\n                cc.audioEngine.stop(this.audioId);\n                this.isCurrentlyInvincible = false;\n                this.invincibleTimer = 0;\n            }\n        }\n\n        if (this.game.isPlayerAlive()) {\n            this.updateMovement(dt)\n        }\n    }\n\n    updateMovement(dt) {\n        // === X-AXIS ===\n        if (this.accLeft) {\n            this.xSpeed -= this.X_ACCELERATION * dt;\n        } else if (this.accRight) {\n            this.xSpeed += this.X_ACCELERATION * dt;\n        }\n        this.node.x += this.xSpeed * dt;\n        this.xSpeed *= this.DAMP;\n\n        // X-Screen bounds\n        if (this.node.x <= this.leftBound) {\n            this.node.x = this.leftBound;\n        }\n        else if (this.node.x >= this.rightBound) {\n            this.node.x = this.rightBound;\n        }\n\n        // === Y-AXIS ===\n        if (this.accDown) {\n            this.ySpeed -= this.Y_ACCELERATION * dt;\n        } else if (this.accUp) {\n            this.ySpeed += this.Y_ACCELERATION * dt;\n        }\n\n        this.node.y += this.ySpeed * dt;\n        this.ySpeed *= this.DAMP;\n\n        // Y-Screen bounds\n        if (this.node.y <= this.lowerBound) {\n            this.node.y = this.lowerBound;\n        }\n        else if (this.node.y >= this.upperBound) {\n            this.node.y = this.upperBound;\n        }\n    }\n\n    onKeyDown(event: cc.Event.EventKeyboard) {\n        if (this.game.isPlayerAlive()) {\n            switch(event.keyCode) {\n                case cc.macro.KEY.left:\n                    if (!this.isLeftAnimPlaying) {\n                        this.flySound.play();\n                        this.isLeftAnimPlaying = true;\n                        this.animations.play(\"PlayerLeft\");\n                    }\n                    this.accLeft = true;\n                    break;\n                case cc.macro.KEY.right:\n                if (!this.isRightAnimPlaying) {\n                    this.flySound.play();\n                    this.isRightAnimPlaying = true;\n                    this.animations.play(\"PlayerRight\");\n                    }\n                    this.accRight = true;\n                    break;\n                case cc.macro.KEY.up:\n                    this.accUp = true;\n                    break;\n                case cc.macro.KEY.down:\n                    this.accDown = true;\n                    break;\n                case cc.macro.KEY.space:\n                    break;\n            }\n        }\n \n    }\n\n    onKeyUp(event: cc.Event.EventKeyboard) {\n        if (this.game.isPlayerAlive()) {\n            switch(event.keyCode) {\n                case cc.macro.KEY.left:\n                    this.isLeftAnimPlaying = false;\n                    this.animations.play(\"PlayerNormal\");\n                    this.accLeft = false;\n                    break;\n                case cc.macro.KEY.right:\n                    this.isRightAnimPlaying = false;\n                    this.animations.play(\"PlayerNormal\");\n                    this.accRight = false;\n                    break;\n                case cc.macro.KEY.up:\n                    this.accUp = false;\n                    break;\n                case cc.macro.KEY.down:\n                    this.accDown = false;\n                    break;\n                case cc.macro.KEY.space:\n                    this.game.spawnBlueLaser();\n                    break;\n            }\n        }\n    }\n\n    makeInvincible() {\n        this.audioId = cc.audioEngine.play(this.invincibleSound, true, 0.4);\n        this.isCurrentlyInvincible = true;\n    }\n\n    isInvincible() {\n        return this.isCurrentlyInvincible;\n    }\n\n    // ============== Animation trigger functions ==============\n    // These gets called after the main animation is finished (left/right animation)\n    // To keep the fire from the engine fired up while in a tilted state. \n    playMaxLeftFrames() {\n        this.animations.play(\"PlayerLeftMax\");\n    }\n\n    playMaxRightFrames() {\n        this.animations.play(\"PlayerRightMax\");\n    }\n\n    destroySelf() {\n        this.node.destroy();\n    }\n}\n"]}