{"version":3,"sources":["../../../../assets/Script/assets/Script/Player.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../assets/Script","sourcesContent":["import Game from \"./Game\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class Player extends cc.Component {\n\n    private isLeftAnimPlaying: boolean = false;\n    private isRightAnimPlaying: boolean = false;\n\n    // X / Y bounds for the player\n    private leftBound: number = 0;\n    private rightBound: number = 0;\n    private upperBound: number = 0;\n    private lowerBound: number = 0;\n\n    private xSpeed: number = 0;\n    private ySpeed: number = 0;\n\n    private flySound: cc.AudioSource = null;\n    private animations : cc.Animation = null;\n    private isCurrentlyInvincible: boolean = false;\n    private invincibleId = -1;\n\n    @property(cc.AudioClip)\n    invincibleSound: cc.AudioClip = null;\n\n    game : Game = null;\n\n    // Constants\n    private readonly X_ACCELERATION: number = 3200;\n    private readonly Y_ACCELERATION: number = 2300;\n    private readonly DAMP: number = 0.8;\n\n    onLoad () {\n        this.flySound = this.getComponent(cc.AudioSource);\n        this.flySound.volume = 0.6;\n        this.animations = this.getComponent(cc.Animation);\n    }\n\n    start () {\n        this.leftBound = -this.game.getMainCanvas().width / 2 + this.node.width / 2;\n        this.rightBound = this.game.getMainCanvas().width / 2 - this.node.width / 2;\n        this.upperBound = this.game.getPlayerUpperBound();\n        this.lowerBound = this.node.height / 2 -this.game.getMainCanvas().height / 2;\n    }\n\n    update (dt) {\n        if (this.game.isPlayerAlive()) {\n            if (this.game.isMobileDevice()) {\n                this.updateForceMobile(dt);\n            }\n            else {\n                this.updateForce(dt);\n            }\n            this.applyForce(dt)\n            this.checkPlayerBounds();\n        }\n    }\n\n    checkPlayerBounds(){\n        // X-Screen bounds\n        if (this.node.x <= this.leftBound) {\n            this.node.x = this.leftBound;\n        }\n        else if (this.node.x >= this.rightBound) {\n            this.node.x = this.rightBound;\n        }\n\n        // Y-Screen bounds\n        if (this.node.y < this.lowerBound) {\n            this.game.playBoundEffect(false);\n            this.node.y = this.lowerBound;\n            this.ySpeed = 0;\n        }\n        else if (this.node.y > this.upperBound) {\n            this.game.playBoundEffect(true);\n            this.node.y = this.upperBound;\n            this.ySpeed = 0;\n        }\n    }\n\n    updateForceMobile(dt: number) {\n        if (this.game.getAccelerometerX() < -0.25) {\n            if (!this.isLeftAnimPlaying) {\n                this.flySound.play();\n                this.isLeftAnimPlaying = true;\n                this.animations.play(\"PlayerLeft\");\n            }\n        }\n        else if (this.game.getAccelerometerX() > 0.25) {\n            if (!this.isRightAnimPlaying) {\n                this.flySound.play();\n                this.isRightAnimPlaying = true;\n                this.animations.play(\"PlayerRight\");\n                }\n        }\n        else {\n            this.isRightAnimPlaying = false;\n            this.isLeftAnimPlaying = false;\n            if (!this.animations.getAnimationState(\"PlayerNormal\").isPlaying) {\n                this.animations.play(\"PlayerNormal\");\n            }\n        }\n        // === X-AXIS ===\n        this.xSpeed += this.game.getAccelerometerX() * this.X_ACCELERATION * dt;\n        // === Y-AXIS ===\n        this.ySpeed += this.game.getAccelerometerY() * this.Y_ACCELERATION * dt;\n    }\n\n    updateForce(dt: number) {\n        if (this.game.isAccLeft()) {\n            this.xSpeed -= this.X_ACCELERATION * dt;\n        } else if (this.game.isAccRight()) {\n            this.xSpeed += this.X_ACCELERATION * dt;\n        }\n        if (this.game.isAccDown()) {\n            this.ySpeed -= this.Y_ACCELERATION * dt;\n        } else if (this.game.isAccUp()) {\n            this.ySpeed += this.Y_ACCELERATION * dt;\n        }\n    }\n\n    applyForce(dt: number) {\n        this.node.x += this.xSpeed * dt;\n        this.xSpeed *= this.DAMP;\n        this.node.y += this.ySpeed * dt;\n        this.ySpeed *= this.DAMP;\n    }\n\n    makeInvincible() {\n        this.invincibleId = cc.audioEngine.play(this.invincibleSound, true, 0.75);\n        this.isCurrentlyInvincible = true;\n    }\n\n    makeNotInvincible() {\n        cc.audioEngine.stop(this.invincibleId);\n        this.isCurrentlyInvincible = false;\n    }\n\n    isInvincible() {\n        return this.isCurrentlyInvincible;\n    }\n    \n    getShipAnimations() {\n        return this.animations;\n    }\n\n    playFlySound() {\n        this.flySound.play();\n    }\n\n    isTurnLeftAnimationPlaying() {\n        return this.isLeftAnimPlaying;\n    }\n\n    isTurnRightAnimationPlaying() {\n        return this.isRightAnimPlaying\n    }\n\n    setTurnLeftAnimationPlaying(value: boolean) {\n        this.isLeftAnimPlaying = value;\n    }\n\n    setTurnRightAnimationPlaying(value: boolean) {\n        this.isRightAnimPlaying = value;\n    }\n\n    // ============== Animation trigger functions ==============\n    // These gets called after the main animation is finished (left/right animation)\n    // To keep the fire from the engine fired up while in a tilted state. \n    playMaxLeftFrames() {\n        this.animations.play(\"PlayerLeftMax\");\n    }\n\n    playMaxRightFrames() {\n        this.animations.play(\"PlayerRightMax\");\n    }\n\n    destroySelf() {\n        this.node.destroy();\n    }\n}\n"]}