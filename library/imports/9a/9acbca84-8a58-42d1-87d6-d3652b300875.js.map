{"version":3,"sources":["../../../../assets/Script/assets/Script/Asteroid.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../assets/Script","sourcesContent":["import Game from \"./Game\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class Asteroid extends cc.Component {\n    private rotationSpeed: number = 100;\n    private rotationDir = 1;\n    private lowerBound: number = 0;\n    private leftBound: number = 0;\n    private rightBound: number = 0;\n\n    game: Game = null;\n\n    onLoad () {\n        this.node.setScale(0.3);\n        this.rotationDir *= Math.random() < 0.5 ? -1 : 1;\n    }\n\n    start () {\n        this.lowerBound = -this.game.getMainCanvas().height * 0.62;\n        this.leftBound = -this.game.getMainCanvas().width * 0.5 + this.node.width * 0.5 * this.node.scale -2;\n        this.rightBound = this.game.getMainCanvas().width * 0.5 - this.node.width * 0.5 * this.node.scale + 2;\n        // this.leftBound = -this.game.getMainCanvas().width / 2 - 40;\n        // this.rightBound = this.game.getMainCanvas().width / 2 + 40;\n    }\n\n    update (dt) {\n        if (cc.isValid(this.node)) {\n            this.node.angle += this.rotationSpeed * dt * this.rotationDir;\n            if (this.node.y <= this.lowerBound) {\n                this.node.destroy();\n            }\n            else {\n                // X-Screen bounds\n                if (this.node.x <= this.leftBound || this.node.x >= this.rightBound) {\n                this.node.getComponent(cc.RigidBody);\n                // Invert x-velocity so it bounces back\n                let body = this.node.getComponent(cc.RigidBody);\n                body.linearVelocity = cc.v2(body.linearVelocity.x * -1, body.linearVelocity.y);\n                }\n            }\n        }\n    }\n    onBeginContact(contact, selfCollider, otherCollider) {\n        if (otherCollider.node.name === \"LaserBlue\") {\n            this.game.playRockExplosion();\n            // this.node.rotation = 0;\n            // Turn off just the hitbox since we will destroy the whole node after we are done with the animation.\n            this.node.getComponent(cc.RigidBody).enabledContactListener = false;\n            this.getComponent(cc.Animation).play(\"ExplosionLarger\");\n            \n            // Gets destroyed by the trigger function destroySelf\n            otherCollider.node.destroy();\n        }\n        if (otherCollider.node.name === \"Player\") {\n            this.game.playRockExplosion();\n            this.node.getComponent(cc.RigidBody).enabledContactListener = false;\n            let isAlive = this.game.isPlayerAlive();\n            if (!this.game.getPlayerObject().isInvincible() && isAlive) {\n                // otherCollider.getComponent(cc.RigidBody).enabledContactListener = false;\n                this.game.resetGame();\n            }\n            else {\n                this.getComponent(cc.Animation).play(\"ExplosionLarger\");\n            }\n        }\n    }\n\n    // ============== Animation trigger functions ==============\n    destroySelf() {\n        this.node.destroy();\n    }\n    selfScale() {\n        this.node.setScale(1.4);\n    }\n}\n"]}