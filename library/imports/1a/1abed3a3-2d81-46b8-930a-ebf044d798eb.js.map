{"version":3,"sources":["../../../../assets/Script/assets/Script/Enemy.ts"],"names":[],"mappings":";;;;;AAEM,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAQ,CAAkB;AAG1C;IAAmC,yBAAY;IAD/C;QAAA,qEAwEC;QAtEW,gBAAU,GAAW,CAAC,CAAC;QACvB,eAAS,GAAW,CAAC,CAAC;QACtB,gBAAU,GAAW,CAAC,CAAC;QACvB,SAAG,GAAY,IAAI,CAAC;QAEpB,eAAS,GAAW,CAAC,CAAC;QAE9B,UAAI,GAAS,IAAI,CAAC;;IA+DtB,CAAC;IA7DG,sBAAM,GAAN;QACI,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC7B,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC;QAC1C,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC;IACzC,CAAC;IAED,cAAc;IAEd,sBAAM,GAAN,UAAQ,EAAE;QACN,IAAI,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YACvB,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,UAAU,EAAE;gBAChC,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;gBAC3C,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;aACvB;iBACI;gBACA,kBAAkB;gBACnB,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,GAAG,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,UAAU,GAAE,EAAE,EAAE;oBAC1E,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;oBACtB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;oBACrC,uCAAuC;oBACvC,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;oBAChD,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;iBAClF;aACJ;SACJ;IACL,CAAC;IACD,8BAAc,GAAd,UAAe,OAAO,EAAE,YAAY,EAAE,aAAa;QAC/C,IAAI,aAAa,CAAC,IAAI,CAAC,IAAI,KAAK,WAAW,EAAE;YACzC,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAC9B,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YAC7B,IAAI,IAAI,CAAC,SAAS,GAAG,CAAC,EAAE;gBACpB,IAAI,CAAC,SAAS,EAAE,CAAC;aACpB;iBACI;gBACD,sGAAsG;gBACtG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,sBAAsB,GAAG,KAAK,CAAC;gBACpE,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aACrD;SACJ;QACD,IAAI,aAAa,CAAC,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAE;YACtC,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;YACvC,kBAAkB;YAClB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,sBAAsB,GAAG,KAAK,CAAC;YACpE,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAClD,SAAS;YACT,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;YACtB,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC;YACnC,+BAA+B;YAC3B,gCAAgC;SACnC;IACT,CAAC;IAED,4BAAY,GAAZ;QACI,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;IACpC,CAAC;IAED,4DAA4D;IAC5D,2BAAW,GAAX;QACI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;IACxB,CAAC;IAtEgB,KAAK;QADzB,OAAO;OACa,KAAK,CAuEzB;IAAD,YAAC;CAvED,AAuEC,CAvEkC,EAAE,CAAC,SAAS,GAuE9C;kBAvEoB,KAAK","file":"","sourceRoot":"../../../../assets/Script","sourcesContent":["import Game from \"./Game\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class Enemy extends cc.Component {\n    private lowerBound: number = 0;\n    private leftBound: number = 0;\n    private rightBound: number = 0;\n    private cvs: cc.Node = null;\n\n    private hitPoints: number = 1;\n\n    game: Game = null;\n\n    onLoad () {\n        this.cvs = cc.find(\"Canvas\");\n        this.lowerBound = -this.cvs.height * 0.62;\n        this.leftBound = -this.cvs.width / 2;\n        this.rightBound = this.cvs.width / 2;\n    }\n\n    // start () {}\n\n    update (dt) {\n        if (cc.isValid(this.node)) {\n            if (this.node.y <= this.lowerBound) {\n                console.log(\"ENEMY DESTROYED SUPER CLASS\");\n                this.node.destroy();\n            }\n            else {\n                 // X-Screen bounds\n                if (this.node.x <= this.leftBound - 30 || this.node.x >= this.rightBound +30) {\n                    console.log(\"INVERT\");\n                    this.node.getComponent(cc.RigidBody);\n                    // Invert x-velocity so it bounces back\n                    let body = this.node.getComponent(cc.RigidBody);\n                    body.linearVelocity = cc.v2(body.linearVelocity.x * -1, body.linearVelocity.y);\n                }\n            }\n        }\n    }\n    onBeginContact(contact, selfCollider, otherCollider) {\n        if (otherCollider.node.name === \"LaserBlue\") {\n            this.game.playRockExplosion();\n            otherCollider.node.destroy();\n            if (this.hitPoints > 0) {\n                this.hitPoints--;\n            }\n            else {\n                // Turn off just the hitbox since we will destroy the whole node after we are done with the animation.\n                this.node.getComponent(cc.RigidBody).enabledContactListener = false;\n                this.getComponent(cc.Animation).play(\"Explosion\");\n            }\n        }\n        if (otherCollider.node.name === \"Player\") {\n            console.log(\"PLAYER ASTEROID CONTACT\");\n            // ====== TODO FIX\n            this.node.getComponent(cc.RigidBody).enabledContactListener = false;\n            this.getComponent(cc.Animation).play(\"Explosion\");\n            // ======\n            this.game.resetGame();\n            this.game.playExplosionAnimation();\n            // selfCollider.node.destroy();\n                // otherCollider.node.destroy();\n            }\n    }\n\n    testFunction() {\n        console.log(\"FROM SUPER CLASS\");   \n    }\n\n    // ============== Animation trigger functions ==============\n    destroySelf() {\n        this.node.destroy();\n    }\n}\n"]}