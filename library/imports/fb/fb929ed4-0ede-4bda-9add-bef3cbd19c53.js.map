{"version":3,"sources":["../../../../assets/Script/assets/Script/LaserRed.ts"],"names":[],"mappings":";;;;;AAAM,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAQ,CAAkB;AAK1C;IAAsC,4BAAY;IADlD;QAAA,qEAgDC;QA9CW,qBAAe,GAAmB,IAAI,CAAC;QACvC,gBAAU,GAAW,CAAC,CAAC;QACvB,eAAS,GAAY,CAAC,CAAC;QACvB,gBAAU,GAAW,CAAC,CAAC;QACvB,gBAAU,GAAW,CAAC,CAAC;QAE/B,UAAI,GAAS,IAAI,CAAC;;IAwCtB,CAAC;IAtCG,yBAAM,GAAN;QACI,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC;IAC7D,CAAC;IAED,wBAAK,GAAL;QACI,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,MAAM,GAAG,GAAG,CAAC;QAC1D,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,KAAK,GAAG,GAAG,CAAC;QACxD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,KAAK,GAAG,GAAG,CAAC;QACxD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,MAAM,GAAG,GAAG,CAAC;IAC7D,CAAC;IAED,yBAAM,GAAN,UAAQ,EAAE;QACN,IAAI,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YACvB,IAAI,IAAI,CAAC,aAAa,EAAE,EAAE;gBACtB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;aACvB;SACJ;IACL,CAAC;IAED,gCAAa,GAAb;QACI,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU;YACjE,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;IACtE,CAAC;IAED,iCAAc,GAAd,UAAe,OAAO,EAAE,YAAY,EAAE,aAAa;QAC/C,IAAI,aAAa,CAAC,IAAI,CAAC,IAAI,KAAK,QAAQ,EAAE;YACtC,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAC9B,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YAC5B,IAAI,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;YACxC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,YAAY,EAAE,IAAI,OAAO,EAAE;gBACxD,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;aACzB;SACJ;IACL,CAAC;IAED,iCAAc,GAAd;QACI,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;IAChC,CAAC;IA9CgB,QAAQ;QAD5B,OAAO;OACa,QAAQ,CA+C5B;IAAD,eAAC;CA/CD,AA+CC,CA/CqC,EAAE,CAAC,SAAS,GA+CjD;kBA/CoB,QAAQ","file":"","sourceRoot":"../../../../assets/Script","sourcesContent":["const {ccclass, property} = cc._decorator;\n\nimport Game from \"./Game\";\n\n@ccclass\nexport default class LaserRed extends cc.Component {\n    private playerFireSound: cc.AudioSource = null;\n    private lowerBound: number = 0;\n    private leftBound : number = 0;\n    private rightBound: number = 0; \n    private upperBound: number = 0;\n\n    game: Game = null;\n\n    onLoad () {\n        this.playerFireSound = this.getComponent(cc.AudioSource);\n    }\n\n    start () {\n        this.lowerBound = -this.game.getMainCanvas().height * 0.6;\n        this.leftBound = -this.game.getMainCanvas().width * 0.5;\n        this.rightBound = this.game.getMainCanvas().width * 0.5;\n        this.upperBound = this.game.getMainCanvas().height * 0.5;\n    }\n\n    update (dt) {\n        if (cc.isValid(this.node)) {\n            if (this.isOutOfBounds()) {\n                this.node.destroy();\n            }\n        }\n    }\n\n    isOutOfBounds() {\n        return this.node.y < this.lowerBound || this.node.y > this.upperBound ||\n            this.node.x < this.leftBound || this.node.x > this.rightBound;\n    }\n    \n    onBeginContact(contact, selfCollider, otherCollider) {\n        if (otherCollider.node.name === \"Player\") {\n            this.game.playRockExplosion();\n            selfCollider.node.destroy();\n            let isAlive = this.game.isPlayerAlive();\n            if (!this.game.getPlayerObject().isInvincible() && isAlive) {\n                this.game.resetGame();\n            }\n        }\n    }\n\n    playLaserSound() {\n        this.playerFireSound.play();\n    }\n}\n"]}