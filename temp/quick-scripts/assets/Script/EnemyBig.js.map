{"version":3,"sources":["EnemyBig.ts"],"names":[],"mappings":";;;;;AAAA,iCAA4B;AAEtB,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAQ,CAAkB;AAG1C;IAAsC,4BAAK;IAD3C;QAAA,qEAiDC;QA9CoB,eAAS,GAAG,CAAC,CAAC;QACd,kBAAY,GAAG,CAAC,CAAC;QACjB,oBAAc,GAAG,GAAG,CAAC;QACrB,oBAAc,GAAG,GAAG,CAAC;QACrB,aAAO,GAAG,CAAC,EAAE,CAAC;QACd,iBAAW,GAAG,GAAG,CAAC;QAE3B,gBAAU,GAAmB,IAAI,CAAC;QAClC,eAAS,GAAa,KAAK,CAAC;QAC5B,gBAAU,GAAW,CAAC,CAAC;QACvB,0BAAoB,GAAG,CAAC,CAAC;;IAoCrC,CAAC;IAlCG,wBAAK,GAAL;QACI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC;QACpD,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,iBAAM,iBAAiB,YAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;IAChE,CAAC;IAED,yBAAM,GAAN,UAAQ,EAAE;QACN,iBAAM,MAAM,YAAC,EAAE,CAAC,CAAC;QACjB,iBAAM,UAAU,YAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;QAExD,IAAI,IAAI,CAAC,eAAe,EAAE;YACtB,IAAI,IAAI,CAAC,SAAS,EAAE;gBAChB,IAAI,CAAC,UAAU,IAAI,EAAE,CAAC;gBACtB,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,YAAY,EAAE;oBACzF,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;oBACpB,IAAI,KAAK,GAAG,CAAC,IAAI,CAAC;oBAClB,IAAI,MAAM,GAAG,CAAC,EAAE,CAAC;oBACjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;wBACxB,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,GAAI,CAAC,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;wBAC9I,KAAK,IAAI,IAAI,CAAC;wBACd,MAAM,IAAI,EAAE,CAAC;qBAChB;oBACD,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;oBACvB,IAAI,CAAC,oBAAoB,EAAE,CAAC;iBAC/B;aACJ;SACJ;IACL,CAAC;IAED,gCAAa,GAAb;QACI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC;IAClC,CAAC;IA/CgB,QAAQ;QAD5B,OAAO;OACa,QAAQ,CAgD5B;IAAD,eAAC;CAhDD,AAgDC,CAhDqC,eAAK,GAgD1C;kBAhDoB,QAAQ","file":"","sourceRoot":"../../../../assets/Script","sourcesContent":["import Enemy from \"./Enemy\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class EnemyBig extends Enemy {\n\n    private readonly FIRE_RATE = 2;\n    private readonly BULLET_BURST = 1;\n    private readonly LASER_INTERVAL = 0.2;\n    private readonly X_ACCELERATION = 110;\n    private readonly Y_SPEED = -50; \n    private readonly LASER_SPEED = 135;\n\n    private laserSound: cc.AudioSource = null;\n    private isBurstOn: boolean =  false;\n    private burstTimer: number = 0;\n    private numberOfBulletsFired = 0;\n\n    start () {\n        this.laserSound = this.getComponent(cc.AudioSource);\n        this.hitPoints = 1;\n        super.setLaserScheduler(this.FIRE_RATE, this.initiateLaser);\n    }\n\n    update (dt) {\n        super.update(dt);\n        super.updateShip(this.X_ACCELERATION, this.Y_SPEED, dt);\n\n        if (this.isAllowedToFire) {\n            if (this.isBurstOn) {\n                this.burstTimer += dt;\n                if (this.burstTimer >= this.LASER_INTERVAL && this.numberOfBulletsFired < this.BULLET_BURST) {\n                    this.burstTimer = 0;\n                    let angle = -37.5;\n                    let offset = -20;\n                    for (let i = 0; i < 7; i++) {\n                        this.createLaser(offset, cc.v2(Math.sin(angle /  (180 / Math.PI)) * this.LASER_SPEED, Math.cos(angle / (180 / Math.PI)) * -this.LASER_SPEED));\n                        angle += 12.5;\n                        offset += 10;\n                    }\n                    this.laserSound.play();\n                    this.numberOfBulletsFired++;\n                }\n            }\n        }\n    }\n\n    initiateLaser() {\n        this.isBurstOn = true;\n        this.burstTimer = 0;\n        this.numberOfBulletsFired = 0;\n    }\n}\n"]}